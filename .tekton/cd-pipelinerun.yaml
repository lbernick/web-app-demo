---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: web-app-demo
  annotations:
    # The event we are targeting as seen from the webhook payload
    # this can be an array too, i.e: [pull_request, push]
    pipelinesascode.tekton.dev/on-event: "[push]"

    # The branch or tag we are targeting (ie: main, refs/tags/*)
    pipelinesascode.tekton.dev/on-target-branch: "[main]"

    # Fetch the git-clone task from hub, we are able to reference later on it
    # with taskRef and it will automatically be embedded into our pipeline.
    pipelinesascode.tekton.dev/task: ".tekton/tasks/kaniko-build.yaml"
    pipelinesascode.tekton.dev/task-1: ".tekton/tasks/git-clone.yaml"
spec:
  params:
    # The variable with brackets are special to Pipelines as Code
    # They will automatically be expanded with the events from Github.
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: image
      value: us-east1-docker.pkg.dev/tekton-interns/leebernick/web-app-demo
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
      - name: image
    workspaces:
      - name: source
    tasks:
      - name: fetch-repository
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: source
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
      - name: build-and-push
        runAfter:
          - fetch-repository
        workspaces:
          - name: source-code
            workspace: source
        params:
        - name: image
          value: $(params.image)
        taskRef:
          name: kaniko-build
  workspaces:
  - name: source
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  taskRunSpecs:
  - pipelineTaskName: build-and-push
    taskServiceAccountName: pac-builder
